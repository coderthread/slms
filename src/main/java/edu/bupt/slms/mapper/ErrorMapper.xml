<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="edu.bupt.slms.mapper.ErrorMapper">
  <resultMap id="BaseResultMap" type="edu.bupt.slms.bean.Error">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="date" jdbcType="TIMESTAMP" property="date" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="des" jdbcType="VARCHAR" property="des" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="importance" jdbcType="INTEGER" property="importance" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="aId" jdbcType="INTEGER" property="aId" />
  </resultMap>
  <sql id="Base_Column_List">
    id, `date`, `type`, des, address, importance, `status`, aId
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from error
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from error
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="edu.bupt.slms.bean.Error" useGeneratedKeys="true">
    insert into error (`date`, `type`, des, 
      address, importance, `status`, 
      aId)
    values (#{date,jdbcType=TIMESTAMP}, #{type,jdbcType=VARCHAR}, #{des,jdbcType=VARCHAR}, 
      #{address,jdbcType=VARCHAR}, #{importance,jdbcType=INTEGER}, #{status,jdbcType=VARCHAR}, 
      #{aId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="edu.bupt.slms.bean.Error" useGeneratedKeys="true">
    insert into error
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="date != null">
        `date`,
      </if>
      <if test="type != null">
        `type`,
      </if>
      <if test="des != null">
        des,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="importance != null">
        importance,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="aId != null">
        aId,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="date != null">
        #{date,jdbcType=TIMESTAMP},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="des != null">
        #{des,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="importance != null">
        #{importance,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="aId != null">
        #{aId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="edu.bupt.slms.bean.Error">
    update error
    <set>
      <if test="date != null">
        `date` = #{date,jdbcType=TIMESTAMP},
      </if>
      <if test="type != null">
        `type` = #{type,jdbcType=VARCHAR},
      </if>
      <if test="des != null">
        des = #{des,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="importance != null">
        importance = #{importance,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=VARCHAR},
      </if>
      <if test="aId != null">
        aId = #{aId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="edu.bupt.slms.bean.Error">
    update error
    set `date` = #{date,jdbcType=TIMESTAMP},
      `type` = #{type,jdbcType=VARCHAR},
      des = #{des,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      importance = #{importance,jdbcType=INTEGER},
      `status` = #{status,jdbcType=VARCHAR},
      aId = #{aId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>